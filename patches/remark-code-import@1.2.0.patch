diff --git a/dist/index.js b/dist/index.js
index f936fe717f14005071748776347002a8e6bd366b..0af1a1f8035f0e9a3ac049631f30ea184c57b383 100644
--- a/dist/index.js
+++ b/dist/index.js
@@ -1,3 +1,4 @@
+import crypto from 'node:crypto';
 import fs from 'node:fs';
 import path from 'node:path';
 import { EOL } from 'node:os';
@@ -40,6 +41,18 @@ function codeImport(options = {}) {
             if (!fileMeta) {
                 continue;
             }
+            const hashMeta = (node.meta || '')
+                // Allow escaping hashes
+                .split(/(?<!\\) /g)
+                .find((meta) => meta.startsWith('hash='));
+            let providedHash;
+            if (hashMeta) {
+                const hashres = /^hash=(?<hash>.+)$/.exec(hashMeta);
+                if (!hashres || !hashres.groups || !hashres.groups.hash) {
+                    throw new Error(`Unable to parse hash ${hashMeta}`);
+                }
+                providedHash = hashres.groups.hash;
+            }
             if (!file.dirname) {
                 throw new Error('"file" should be an instance of VFile');
             }
@@ -76,6 +89,13 @@ function codeImport(options = {}) {
                         if (options.removeRedundantIndentations) {
                             node.value = stripIndent(node.value);
                         }
+                        const actualHash = crypto.createHash('md5').update(node.value).digest('hex');
+                        if (!providedHash) {
+                            reject(new Error(`Content hash not provided for ${fileAbsPath}#L${fromLine}${toLine ? `-L${toLine}` : ''}. Make sure to include the following content hash: hash=${actualHash} .`));
+                        } else if (actualHash !== providedHash) {
+                            reject(new Error(`Content hash mismatch for ${fileAbsPath}#L${fromLine}${toLine ? `-L${toLine}` : ''}. Provided hash was ${providedHash}, actual hash is ${actualHash}. Check if your source content changed.`));
+                            return;
+                        }
                         resolve();
                     });
                 }));
@@ -86,6 +106,13 @@ function codeImport(options = {}) {
                 if (options.removeRedundantIndentations) {
                     node.value = stripIndent(node.value);
                 }
+                const actualHash = crypto.createHash('md5').update(node.value).digest('hex');
+                if (!providedHash) {
+                    throw new Error(`Content hash not provided for ${fileAbsPath}#L${fromLine}${toLine ? `-L${toLine}` : ''}. Make sure to include the following content hash: hash=${actualHash} .`);
+                } else if (actualHash !== providedHash) {
+                    throw new Error(`Content hash mismatch for ${fileAbsPath}#L${fromLine}${toLine ? `-L${toLine}` : ''}. Provided hash was ${providedHash}, actual hash is ${actualHash}. Check if your source content changed.`);
+                    return;
+                }
             }
         }
         if (promises.length) {
